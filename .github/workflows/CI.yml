name: CI
on:
  push:
    branches:
      - 'master'
      - 'dev'

jobs:
  frontend:
    name: Frontend
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Cache node_modules
        uses: actions/cache@v2
        with:
          path: Webclient/node_modules
          key: ubuntu-latest-node-modules-directory-${{ hashFiles('Webclient/package.json') }}

      - name: Install Angular
        run: |
          cd Webclient
          npm install

      - name: Linting
        run: |
          cd Webclient
          npm run-script lint

      - name: Building
        run: |
          cd Webclient
          npm run-script build

      - name: Testing
        run: |
          cd Webclient
          npm run-script test

  backend:
    name: Backend
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install Rust
        id: toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          components: clippy, rustfmt
          override: true

      - name: Cache cargo registry
        uses: actions/cache@v2
        with:
          path: ~/.cargo/registry
          key: cargo-registry-${{ hashFiles('Cargo.lock') }}

      - name: Cache cargo binaries
        uses: actions/cache@v2
        with:
          path: ~/.cargo/bin
          key: ubuntu-latest-cargo-binaries-${{ steps.toolchain.outputs.rustc_hash }}

      - name: Cache target directory
        uses: actions/cache@v2
        with:
          path: target
          key: ubuntu-latest-target-${{ steps.toolchain.outputs.rustc_hash }}-${{ hashFiles('Cargo.lock') }}

      - name: Formatting
        run: make fmt

      - name: Linting
        run: make clippy
        env:
          CARGO_INCREMENTAL: '0'
          RUSTFLAGS: '-Zprofile -Ccodegen-units=1 -Cinline-threshold=0 -Clink-dead-code -Coverflow-checks=off -Zpanic_abort_tests'
          RUSTDOCFLAGS: '-Zprofile -Ccodegen-units=1 -Cinline-threshold=0 -Clink-dead-code -Coverflow-checks=off -Zpanic_abort_tests'

      - name: Execute tests
        run: make test
        env:
          RUST_BACKTRACE: 'FULL'
          CARGO_INCREMENTAL: '0'
          RUSTFLAGS: '-Zprofile -Ccodegen-units=1 -Cinline-threshold=0 -Clink-dead-code -Coverflow-checks=off -Zpanic_abort_tests'
          RUSTDOCFLAGS: '-Zprofile -Ccodegen-units=1 -Cinline-threshold=0 -Clink-dead-code -Coverflow-checks=off -Zpanic_abort_tests'

      - name: Measuring code coverage
        run: |
          cargo install grcov
          ~/.cargo/bin/grcov ./target/debug/ -s . -t lcov --llvm --branch --ignore-not-existing --filter "covered" \
          --ignore "/*" --ignore "*/tests/*" --ignore "*/dto/*" --ignore "*/domain_value/*" --ignore "*/main.rs" \
          --excl-br-line "#\\[\\w+(\\([\\w\",/\\s=<>]+\\))?\\]|pub\\s\\w+:[\\w<,\\s>]+," \
          --excl-line "#\\[\\w+(\\([\\w\",/\\s=<>]+\\))?\\]" -o lcov.info

      - name: Uploading coverage data
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./lcov.info